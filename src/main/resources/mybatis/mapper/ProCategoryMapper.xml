<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lrs.admin.dao.mapper.ProCategoryMapper" >
  <resultMap id="BaseResultMap" type="com.lrs.admin.dao.domain.ProCategory" >
    <id column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="classify_id" property="classifyId" jdbcType="INTEGER" />
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="steel_cord" property="steelCord" jdbcType="INTEGER" />
    <result column="sbr_rubber" property="sbrRubber" jdbcType="INTEGER" />
    <result column="cis_rubber" property="cisRubber" jdbcType="INTEGER" />
    <result column="nylon_cord" property="nylonCord" jdbcType="INTEGER" />
    <result column="bead_wire" property="beadWire" jdbcType="INTEGER" />
    <result column="carbon_black" property="carbonBlack" jdbcType="INTEGER" />
    <result column="natural_rubber" property="naturalRubber" jdbcType="INTEGER" />
    <result column="tyre_produce" property="tyreProduce" jdbcType="INTEGER" />
    <result column="recla_rubber" property="reclaRubber" jdbcType="INTEGER" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    category_id, classify_id, category_name, unit, desc, steel_cord, sbr_rubber, cis_rubber, 
    nylon_cord, bead_wire, carbon_black, natural_rubber, tyre_produce, recla_rubber, 
    insert_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lrs.admin.dao.domain.ProCategoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pro_category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pro_category
    where category_id = #{categoryId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pro_category
    where category_id = #{categoryId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lrs.admin.dao.domain.ProCategoryExample" >
    delete from pro_category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lrs.admin.dao.domain.ProCategory" >
    insert into pro_category (category_id, classify_id, category_name, 
      unit, desc, steel_cord, 
      sbr_rubber, cis_rubber, nylon_cord, 
      bead_wire, carbon_black, natural_rubber, 
      tyre_produce, recla_rubber, insert_time
      )
    values (#{categoryId,jdbcType=INTEGER}, #{classifyId,jdbcType=INTEGER}, #{categoryName,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{steelCord,jdbcType=INTEGER}, 
      #{sbrRubber,jdbcType=INTEGER}, #{cisRubber,jdbcType=INTEGER}, #{nylonCord,jdbcType=INTEGER}, 
      #{beadWire,jdbcType=INTEGER}, #{carbonBlack,jdbcType=INTEGER}, #{naturalRubber,jdbcType=INTEGER}, 
      #{tyreProduce,jdbcType=INTEGER}, #{reclaRubber,jdbcType=INTEGER}, #{insertTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lrs.admin.dao.domain.ProCategory" >
    insert into pro_category
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="classifyId != null" >
        classify_id,
      </if>
      <if test="categoryName != null" >
        category_name,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="desc != null" >
        desc,
      </if>
      <if test="steelCord != null" >
        steel_cord,
      </if>
      <if test="sbrRubber != null" >
        sbr_rubber,
      </if>
      <if test="cisRubber != null" >
        cis_rubber,
      </if>
      <if test="nylonCord != null" >
        nylon_cord,
      </if>
      <if test="beadWire != null" >
        bead_wire,
      </if>
      <if test="carbonBlack != null" >
        carbon_black,
      </if>
      <if test="naturalRubber != null" >
        natural_rubber,
      </if>
      <if test="tyreProduce != null" >
        tyre_produce,
      </if>
      <if test="reclaRubber != null" >
        recla_rubber,
      </if>
      <if test="insertTime != null" >
        insert_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="classifyId != null" >
        #{classifyId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null" >
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="steelCord != null" >
        #{steelCord,jdbcType=INTEGER},
      </if>
      <if test="sbrRubber != null" >
        #{sbrRubber,jdbcType=INTEGER},
      </if>
      <if test="cisRubber != null" >
        #{cisRubber,jdbcType=INTEGER},
      </if>
      <if test="nylonCord != null" >
        #{nylonCord,jdbcType=INTEGER},
      </if>
      <if test="beadWire != null" >
        #{beadWire,jdbcType=INTEGER},
      </if>
      <if test="carbonBlack != null" >
        #{carbonBlack,jdbcType=INTEGER},
      </if>
      <if test="naturalRubber != null" >
        #{naturalRubber,jdbcType=INTEGER},
      </if>
      <if test="tyreProduce != null" >
        #{tyreProduce,jdbcType=INTEGER},
      </if>
      <if test="reclaRubber != null" >
        #{reclaRubber,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lrs.admin.dao.domain.ProCategoryExample" resultType="java.lang.Integer" >
    select count(*) from pro_category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pro_category
    <set >
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.classifyId != null" >
        classify_id = #{record.classifyId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryName != null" >
        category_name = #{record.categoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null" >
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.desc != null" >
        desc = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.steelCord != null" >
        steel_cord = #{record.steelCord,jdbcType=INTEGER},
      </if>
      <if test="record.sbrRubber != null" >
        sbr_rubber = #{record.sbrRubber,jdbcType=INTEGER},
      </if>
      <if test="record.cisRubber != null" >
        cis_rubber = #{record.cisRubber,jdbcType=INTEGER},
      </if>
      <if test="record.nylonCord != null" >
        nylon_cord = #{record.nylonCord,jdbcType=INTEGER},
      </if>
      <if test="record.beadWire != null" >
        bead_wire = #{record.beadWire,jdbcType=INTEGER},
      </if>
      <if test="record.carbonBlack != null" >
        carbon_black = #{record.carbonBlack,jdbcType=INTEGER},
      </if>
      <if test="record.naturalRubber != null" >
        natural_rubber = #{record.naturalRubber,jdbcType=INTEGER},
      </if>
      <if test="record.tyreProduce != null" >
        tyre_produce = #{record.tyreProduce,jdbcType=INTEGER},
      </if>
      <if test="record.reclaRubber != null" >
        recla_rubber = #{record.reclaRubber,jdbcType=INTEGER},
      </if>
      <if test="record.insertTime != null" >
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pro_category
    set category_id = #{record.categoryId,jdbcType=INTEGER},
      classify_id = #{record.classifyId,jdbcType=INTEGER},
      category_name = #{record.categoryName,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      desc = #{record.desc,jdbcType=VARCHAR},
      steel_cord = #{record.steelCord,jdbcType=INTEGER},
      sbr_rubber = #{record.sbrRubber,jdbcType=INTEGER},
      cis_rubber = #{record.cisRubber,jdbcType=INTEGER},
      nylon_cord = #{record.nylonCord,jdbcType=INTEGER},
      bead_wire = #{record.beadWire,jdbcType=INTEGER},
      carbon_black = #{record.carbonBlack,jdbcType=INTEGER},
      natural_rubber = #{record.naturalRubber,jdbcType=INTEGER},
      tyre_produce = #{record.tyreProduce,jdbcType=INTEGER},
      recla_rubber = #{record.reclaRubber,jdbcType=INTEGER},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lrs.admin.dao.domain.ProCategory" >
    update pro_category
    <set >
      <if test="classifyId != null" >
        classify_id = #{classifyId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null" >
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="steelCord != null" >
        steel_cord = #{steelCord,jdbcType=INTEGER},
      </if>
      <if test="sbrRubber != null" >
        sbr_rubber = #{sbrRubber,jdbcType=INTEGER},
      </if>
      <if test="cisRubber != null" >
        cis_rubber = #{cisRubber,jdbcType=INTEGER},
      </if>
      <if test="nylonCord != null" >
        nylon_cord = #{nylonCord,jdbcType=INTEGER},
      </if>
      <if test="beadWire != null" >
        bead_wire = #{beadWire,jdbcType=INTEGER},
      </if>
      <if test="carbonBlack != null" >
        carbon_black = #{carbonBlack,jdbcType=INTEGER},
      </if>
      <if test="naturalRubber != null" >
        natural_rubber = #{naturalRubber,jdbcType=INTEGER},
      </if>
      <if test="tyreProduce != null" >
        tyre_produce = #{tyreProduce,jdbcType=INTEGER},
      </if>
      <if test="reclaRubber != null" >
        recla_rubber = #{reclaRubber,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null" >
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where category_id = #{categoryId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lrs.admin.dao.domain.ProCategory" >
    update pro_category
    set classify_id = #{classifyId,jdbcType=INTEGER},
      category_name = #{categoryName,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      desc = #{desc,jdbcType=VARCHAR},
      steel_cord = #{steelCord,jdbcType=INTEGER},
      sbr_rubber = #{sbrRubber,jdbcType=INTEGER},
      cis_rubber = #{cisRubber,jdbcType=INTEGER},
      nylon_cord = #{nylonCord,jdbcType=INTEGER},
      bead_wire = #{beadWire,jdbcType=INTEGER},
      carbon_black = #{carbonBlack,jdbcType=INTEGER},
      natural_rubber = #{naturalRubber,jdbcType=INTEGER},
      tyre_produce = #{tyreProduce,jdbcType=INTEGER},
      recla_rubber = #{reclaRubber,jdbcType=INTEGER},
      insert_time = #{insertTime,jdbcType=TIMESTAMP}
    where category_id = #{categoryId,jdbcType=INTEGER}
  </update>
</mapper>