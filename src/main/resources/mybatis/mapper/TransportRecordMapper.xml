<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lrs.admin.dao.mapper.TransportRecordMapper" >
  <resultMap id="BaseResultMap" type="com.lrs.admin.dao.domain.TransportRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="firm_id" property="firmId" jdbcType="INTEGER" />
    <result column="tag_time" property="tagTime" jdbcType="INTEGER" />
    <result column="category_id" property="categoryId" jdbcType="VARCHAR" />
    <result column="transport_volume" property="transportVolume" jdbcType="REAL" />
    <result column="transport_distance" property="transportDistance" jdbcType="REAL" />
    <result column="is_load" property="isLoad" jdbcType="INTEGER" />
    <result column="applicant" property="applicant" jdbcType="VARCHAR" />
    <result column="applicant_time" property="applicantTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, firm_id, tag_time, category_id, transport_volume, transport_distance, is_load, 
    applicant, applicant_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lrs.admin.dao.domain.TransportRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transport_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from transport_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from transport_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lrs.admin.dao.domain.TransportRecordExample" >
    delete from transport_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lrs.admin.dao.domain.TransportRecord" >
    insert into transport_record (id, firm_id, tag_time, 
      category_id, transport_volume, transport_distance, 
      is_load, applicant, applicant_time
      )
    values (#{id,jdbcType=INTEGER}, #{firmId,jdbcType=INTEGER}, #{tagTime,jdbcType=INTEGER}, 
      #{categoryId,jdbcType=VARCHAR}, #{transportVolume,jdbcType=REAL}, #{transportDistance,jdbcType=REAL}, 
      #{isLoad,jdbcType=INTEGER}, #{applicant,jdbcType=VARCHAR}, #{applicantTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lrs.admin.dao.domain.TransportRecord" >
    insert into transport_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="firmId != null" >
        firm_id,
      </if>
      <if test="tagTime != null" >
        tag_time,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="transportVolume != null" >
        transport_volume,
      </if>
      <if test="transportDistance != null" >
        transport_distance,
      </if>
      <if test="isLoad != null" >
        is_load,
      </if>
      <if test="applicant != null" >
        applicant,
      </if>
      <if test="applicantTime != null" >
        applicant_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="firmId != null" >
        #{firmId,jdbcType=INTEGER},
      </if>
      <if test="tagTime != null" >
        #{tagTime,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=VARCHAR},
      </if>
      <if test="transportVolume != null" >
        #{transportVolume,jdbcType=REAL},
      </if>
      <if test="transportDistance != null" >
        #{transportDistance,jdbcType=REAL},
      </if>
      <if test="isLoad != null" >
        #{isLoad,jdbcType=INTEGER},
      </if>
      <if test="applicant != null" >
        #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="applicantTime != null" >
        #{applicantTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lrs.admin.dao.domain.TransportRecordExample" resultType="java.lang.Integer" >
    select count(*) from transport_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update transport_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.firmId != null" >
        firm_id = #{record.firmId,jdbcType=INTEGER},
      </if>
      <if test="record.tagTime != null" >
        tag_time = #{record.tagTime,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.transportVolume != null" >
        transport_volume = #{record.transportVolume,jdbcType=REAL},
      </if>
      <if test="record.transportDistance != null" >
        transport_distance = #{record.transportDistance,jdbcType=REAL},
      </if>
      <if test="record.isLoad != null" >
        is_load = #{record.isLoad,jdbcType=INTEGER},
      </if>
      <if test="record.applicant != null" >
        applicant = #{record.applicant,jdbcType=VARCHAR},
      </if>
      <if test="record.applicantTime != null" >
        applicant_time = #{record.applicantTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update transport_record
    set id = #{record.id,jdbcType=INTEGER},
      firm_id = #{record.firmId,jdbcType=INTEGER},
      tag_time = #{record.tagTime,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=VARCHAR},
      transport_volume = #{record.transportVolume,jdbcType=REAL},
      transport_distance = #{record.transportDistance,jdbcType=REAL},
      is_load = #{record.isLoad,jdbcType=INTEGER},
      applicant = #{record.applicant,jdbcType=VARCHAR},
      applicant_time = #{record.applicantTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lrs.admin.dao.domain.TransportRecord" >
    update transport_record
    <set >
      <if test="firmId != null" >
        firm_id = #{firmId,jdbcType=INTEGER},
      </if>
      <if test="tagTime != null" >
        tag_time = #{tagTime,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=VARCHAR},
      </if>
      <if test="transportVolume != null" >
        transport_volume = #{transportVolume,jdbcType=REAL},
      </if>
      <if test="transportDistance != null" >
        transport_distance = #{transportDistance,jdbcType=REAL},
      </if>
      <if test="isLoad != null" >
        is_load = #{isLoad,jdbcType=INTEGER},
      </if>
      <if test="applicant != null" >
        applicant = #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="applicantTime != null" >
        applicant_time = #{applicantTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lrs.admin.dao.domain.TransportRecord" >
    update transport_record
    set firm_id = #{firmId,jdbcType=INTEGER},
      tag_time = #{tagTime,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=VARCHAR},
      transport_volume = #{transportVolume,jdbcType=REAL},
      transport_distance = #{transportDistance,jdbcType=REAL},
      is_load = #{isLoad,jdbcType=INTEGER},
      applicant = #{applicant,jdbcType=VARCHAR},
      applicant_time = #{applicantTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>